import std/[os, strutils, strformat, algorithm, sugar]
import ../src/operations/types
import ../src/operations/defs

const compDir: string = "shell-completions"

if not dirExists(".git"):
    echo "Must be executed from project root"
    quit QuitFailure
if not dirExists(compDir):
    createDir(compDir)

proc replaced(input: var string, what, by: string) =
    input = input.replace(what, by)

const keywordCommands: string = "<<COMMANDS>>"

const rawCompleteZsh: string = """#compdef gitman
# autogenerated via Nim script
compdef _gitman gitman
[ -z "$GITMAN_REPOS_LOCATION" ] && GITMAN_REPOS_LOCATION=~/Git

_gitman() {
    local -a commands
    commands=(
<<COMMANDS>>
    )

    if (( CURRENT == 2 )); then
        _describe -t commands 'commands' commands
    elif (( CURRENT >= 3 )); then
        _path_files -/ -W "$GITMAN_REPOS_LOCATION"
    fi
    return 0
}
"""

let operationsSorted: seq[Operation] = operations.sorted(
    (x, y: Operation) -> int => cmp(x.name, y.name)
)

var
    linesZsh: seq[string]
    completeZsh: string = rawCompleteZsh

for op in operationsSorted:
    linesZsh.add &"'{op.name}:{op.desc}'"

completeZsh.replaced(keywordCommands, linesZsh.join("\n").indent(8))

writeFile(compDir / "gitman_zsh_compdef", completeZsh)
